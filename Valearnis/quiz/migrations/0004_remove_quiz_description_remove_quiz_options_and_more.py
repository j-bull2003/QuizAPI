# Generated by Django 4.1.4 on 2022-12-16 18:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('quiz', '0003_remove_quiz_answers_option_is_correct'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='quiz',
            name='description',
        ),
        migrations.RemoveField(
            model_name='quiz',
            name='options',
        ),
        migrations.RemoveField(
            model_name='quiz',
            name='text',
        ),
        migrations.AddField(
            model_name='quiz',
            name='score',
            field=models.IntegerField(blank=True, null=True, verbose_name='Score'),
        ),
        migrations.AddField(
            model_name='quiz',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to=settings.AUTH_USER_MODEL, verbose_name='User'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('text', models.CharField(max_length=255, verbose_name='Text')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('options', models.ManyToManyField(related_name='quizzes', to='quiz.option', verbose_name='Options')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='quiz',
            name='questions',
            field=models.ManyToManyField(related_name='quizzes', to='quiz.question', verbose_name='Questions'),
        ),
    ]
